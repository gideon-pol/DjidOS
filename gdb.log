debug.gdb:21: Error in sourced command file:
The "remote" target does not support "run".  Try "help target" or "continue".
Continuing.

Program received signal SIGINT, Interrupt.
0x000000000000875e in ?? ()
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
debug.gdb:27: Error in sourced command file:
Cannot find bounds of current function
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
Breakpoint 1 at 0xffffff800001d082
debug.gdb:22: Error in sourced command file:
Cannot find bounds of current function
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
Cannot find bounds of current function
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
Cannot find bounds of current function
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.
No breakpoint number 2.
$1 = 1000000
debug.gdb:20: Error in sourced command file:
This command cannot be used at the top level.
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
No breakpoint number 2.
$1 = 1000000
debug.gdb:20: Error in sourced command file:
This command cannot be used at the top level.
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
debug.gdb:26: Error in sourced command file:
Cannot find bounds of current function
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.
debug.gdb:22: Error in sourced command file:
Cannot find bounds of current function
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Program received signal SIGINT, Interrupt.
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002f545 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002ec34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002ec58, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
debug.gdb:29: Error in sourced command file:
Remote communication error.  Target disconnected.: Connection reset by peer.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:79
79	void kernel_main(KernelInfo info){
Undefined command: "letsgo".  Try "help".
80	    InterruptManager::Initialize();
InterruptManager::Initialize () at src/kernel/interrupt.cpp:114
114	    void Initialize(){
115	        limit = sizeof(InterruptTableEntry) * 256 - 1;
116	        base = (uint64_t)&idt;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
Remote communication error.  Target disconnected.: Connection reset by peer.
Quit

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:79
79	void kernel_main(KernelInfo info){
80	    InterruptManager::Initialize();
InterruptManager::Initialize () at src/kernel/interrupt.cpp:114
114	    void Initialize(){
115	        limit = sizeof(InterruptTableEntry) * 256 - 1;
116	        base = (uint64_t)&idt;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
119	            *((uint8_t*)&idt + i) = 0;
118	        for(int i = 0; i < sizeof(InterruptTableEntry) * 256; i++){
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff8000034768, r=128 '\200', g=104 'h', b=155 '\233', a=128 '\200') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=-65440, saturation=2.62928433e-40, value=-nan(0x7f0640)) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xfd400000) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=1, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff800001581b <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\020\326\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xfd) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=208 '\320', g=0 '\000', b=128 '\200', a=96 '`') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < Font->height; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
89	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
Remote communication error.  Target disconnected.: Connection reset by peer.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff8000034768, r=128 '\200', g=104 'h', b=155 '\233', a=128 '\200') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=-65440, saturation=2.62928433e-40, value=-nan(0x7f0640)) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xfd400000) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=1, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xfd) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=208 '\320', g=0 '\000', b=128 '\200', a=96 '`') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0004ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=2, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0008ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=3, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff000cff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=4, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0010ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=5, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0015ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=6, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0019ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=7, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff001dff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=8, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0021ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=9, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0026ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=10, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff002aff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=11, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff002eff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=12, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0032ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=13, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0037ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=14, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff003bff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=15, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff003fff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=16, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0043ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=17, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0048ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=18, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff004cff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=19, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0050ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=20, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0054ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=21, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0059ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=22, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff005dff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=23, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0061ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=24, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0066ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=25, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff006aff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=26, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff006eff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=27, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0072ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=28, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0077ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=29, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < strLen; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571c <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff007bff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=30, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f7 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\354\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < strLen; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
Remote communication error.  Target disconnected.: Connection reset by peer.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff8000034768, r=128 '\200', g=104 'h', b=155 '\233', a=128 '\200') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=-65440, saturation=2.62928433e-40, value=-nan(0x7f0640)) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xfd400000) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=1, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xfd) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=208 '\320', g=0 '\000', b=128 '\200', a=96 '`') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0004ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=2, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0008ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=3, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff000cff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=4, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0010ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=5, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0015ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=6, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0019ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=7, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff001dff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=8, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0021ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=9, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0026ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=10, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff002aff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=11, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff002eff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=12, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0032ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=13, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0037ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=14, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff003bff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=15, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff003fff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=16, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0043ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=17, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0048ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=18, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff004cff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=19, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0050ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=20, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0054ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=21, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0059ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=22, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff005dff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=23, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0061ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=24, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0066ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=25, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff006aff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=26, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff006eff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=27, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0072ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=28, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0077ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=29, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff007bff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=30, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff007fff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=31, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0083ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=32, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0088ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=33, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff008cff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=34, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0090ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=35, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0094ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=36, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0099ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=37, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff009dff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=38, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00a1ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=39, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00a5ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=40, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00aaff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=41, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00aeff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=42, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00b2ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=43, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00b6ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=44, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00bbff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=45, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00bfff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=46, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00c3ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=47, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00c7ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=48, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ccff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=49, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00d0ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=50, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00d4ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=51, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00d8ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=52, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ddff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=53, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00e1ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=54, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00e5ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=55, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00e9ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=56, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00eeff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=57, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00f2ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=58, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00f6ff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=59, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
66	                    out.R = value;
67	                    out.G = t;
68	                    out.B = p;
69	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00faff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=60, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffff) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=61, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00fffa) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=62, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00fff6) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=63, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00fff2) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=64, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffee) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=65, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffe9) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=66, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffe5) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=67, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffe1) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=68, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffdd) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=69, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffd8) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=70, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffd4) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=71, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffd0) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=72, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffcc) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=73, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffc7) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=74, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffc3) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=75, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffbf) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=76, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffbb) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=77, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffb6) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=78, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffb2) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=79, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffae) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=80, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffaa) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=81, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffa5) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=82, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ffa1) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=83, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff9d) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=84, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff99) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=85, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff94) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=86, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff90) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=87, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff8c) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=88, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
61	                q *= 255;
62	                value *= 255;
71	                    out.R = q;
72	                    out.G = value;
73	                    out.B = p;
74	                    break;
99	                return out;     
100	            }
UI::Graphics::DrawString (s=0xffffff80000157f5 <UI::Graphics::Color::FromHSV(int, float, float)+73> "H\270@\233\377\377\377\377\377\377f\017\357\300\017/E\250r7\363\017,E\244\017\266\310\363\017,E\244\017\266\320\363\017,E\244\017\266\360H\215E\274H\211\307H\270\352\325\375\377\377\377\377\377H\215\004\003\377ЋE\274\351F\002", len=-128, column=56608, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e2a0 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
kernel_main (info=...) at src/kernel/main.cpp:201
201	        h = (h + 1) % 360;
203	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff800001571a <kernel_main(KernelInfo)+450>, r=128 '\200', g=80 'P', b=128 '\200', a=104 'h') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::FromHSV (hue=0, saturation=0, value=255) at include/interface/graphics/interface_graphics.h:44
44	            static Color FromHSV(int hue, float saturation, float value){
45	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff00ff88) at include/interface/graphics/interface_graphics.h:15
15	            Color() {}
UI::Graphics::Color::FromHSV (hue=89, saturation=1, value=1) at include/interface/graphics/interface_graphics.h:47
47	                if(saturation <= 0.0) {
51	                double hh = hue % 360;
52	                hh /= 60.0;
53	                long i = (long)hh;
54	                double ff = hh - i;
55	                double p = value * (1.0 - saturation);
56	                double q = value * (1.0 - (saturation * ff));
57	                double t = value * (1.0 - (saturation * (1.0 - ff)));
59	                p *= 255;
60	                t *= 255;
[Inferior 1 (process 1) exited normally]
The program is not being run.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
hullo1
warning: Currently logging to gdb.log.  Turn the logging off and on to make the new setting effective.
hullo2
warning: Currently logging to gdb.log.  Turn the logging off and on to make the new setting effective.
hullo3
Already logging to gdb.log.
hullo4
201	        DrawString("test", 4, 0, 0, Color(0,0,255,255), Color(0,0,0,0));

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
201	        DrawString("test", 4, 0, 0, Color(0,0,255,255), Color(0,0,0,0));
UI::Graphics::Color::Color (this=0xffffff80000346d8, r=128 '\200', g=216 '\330', b=155 '\233', a=128 '\200') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffffd000000000 "", len=0, column=2026, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xfd) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=208 '\320', g=0 '\000', b=128 '\200', a=96 '`') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}

Program received signal SIGINT, Interrupt.
0xffffff80000156d6 in kernel_main (info=...) at src/kernel/main.cpp:201
201	        DrawString("test", 4, 0, 0, Color(0,0,255,255), Color(0,0,0,0));
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
Remote communication error.  Target disconnected.: Connection reset by peer.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
209	        if((void*)handlers[frame.int_number].handler == (void*)&UnhandledInterrupt){
215	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002e278) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:217
217	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
218	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=216 '\330') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:219
219	            if(frame.int_number >= 0x2A){
220	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:223
223	    }
0xffffff800001c156 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:76
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0x200217) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=8 '\b', b=128 '\200', a=82 'R') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
Warning:
Cannot insert breakpoint 1: Remote communication error.  Target disconnected.: Broken pipe.

Command aborted.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
209	        if((void*)handlers[frame.int_number].handler == (void*)&UnhandledInterrupt){
215	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:217
217	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
218	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=216 '\330') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:219
219	            if(frame.int_number >= 0x2A){
220	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:223
223	    }
0xffffff800001c156 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::operator!= (this=0x200296, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=8 '\b', b=128 '\200', a=168 '\250') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
Remote communication error.  Target disconnected.: Connection reset by peer.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
209	        if((void*)handlers[frame.int_number].handler == (void*)&UnhandledInterrupt){
215	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dca4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:217
217	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
218	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=216 '\330') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:219
219	            if(frame.int_number >= 0x2A){
220	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:223
223	    }
0xffffff800001c156 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:85
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0x200246, r=0 '\000', g=8 '\b', b=128 '\200', a=226 '\342') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
Warning:
Cannot insert breakpoint 1: Remote communication error.  Target disconnected.: Connection reset by peer.

Command aborted.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
warning: Source file is more recent than executable.
200	    void HandleInterrupt(int_frame frame){
209	        if((void*)handlers[frame.int_number].handler == (void*)&UnhandledInterrupt){
215	        //handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff8000039000) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dd34) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:217
217	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
218	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=216 '\330') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:219
219	            if(frame.int_number >= 0x2A){
220	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:223
223	    }
0xffffff800001c156 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::Color (this=0x0, r=128 '\200', g=40 '(', b=0 '\000', a=134 '\206') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002dd50 "\360\335\002", len=0, column=0, row=65408, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0x228a2) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=128 '\200', g=0 '\000', b=128 '\200', a=86 'V') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:77
77	            uint32_t bgColorInt = bgColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca8) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:81
81	            for(int i = 0; i < 1; i++){
82	                uint8_t* glyph = (uint8_t*)(fontTable + s[i] * Font->charSize);
84	                for(int y = 0; y < 1; y++){
85	                    int row = (y + yOffset) * CurrentFrame.Width;
87	                    for(int x = 0; x < 1; x++){
88	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
90	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dca4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dcc8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:90
90	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < 1; x++){
95	                    glyph += bytesPerLine;
84	                for(int y = 0; y < 1; y++){
98	                xOffset += Font->width + 1;
81	            for(int i = 0; i < 1; i++){
100	        }
UI::Graphics::Color::Color (this=0xffffff80000156e5 <kernel_main(KernelInfo)+397>, r=128 '\200', g=80 'P', b=128 '\200', a=216 '\330') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::Color (this=0xffffff800002dd34, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::DrawString (s=0xffffff800002e278 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:67
67	        void DrawString(char* s, int len, uint16_t column, uint16_t row, Color textColor, Color bgColor, bool debug){
68	            uint8_t* fontTable = (uint8_t*)Font + Font->headersize;
70	            uint16_t bytesPerLine = (Font->width + 7) / 8;
71	            uint16_t xOffset = column * Font->width;
72	            uint16_t yOffset = row * Font->height;
74	            int strLen = (len == -1) ? strlen(s) : len;
76	            uint32_t textColorInt = textColor.ToInt();
UI::Graphics::Color::ToInt (this=0xffffff800002dca4) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
Remote communication error.  Target disconnected.: Connection reset by peer.
Quit

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
Single stepping until exit from function isr_wrapper,
which has no line number information.
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=8 '\b', b=128 '\200', a=206 '\316') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:216
216	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
217	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::operator!= (this=0x0, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
94	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=184 '\270', b=0 '\000', a=150 '\226') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
Single stepping until exit from function isr_wrapper,
which has no line number information.
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:93
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0x200202, r=0 '\000', g=8 '\b', b=128 '\200', a=57 '9') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
Single stepping until exit from function isr_wrapper,
which has no line number information.
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0x0) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:216
216	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
217	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::operator!= (this=0x200296, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=8 '\b', b=128 '\200', a=206 '\316') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=0 '\000', b=0 '\000', a=0 '\000') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80000102ed <KeyboardDriver::HandleInterrupt()+143>) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:216
216	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
217	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::operator!= (this=0x0, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=184 '\270', b=0 '\000', a=150 '\226') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
94	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
94	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
94	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
94	                            *((uint32_t*)FRAMEBUFFER + row + x + xOffset) = textColorInt;
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff8000010faa <MouseDriver::HandleInterrupt()+66>) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:216
216	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
217	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
UI::Graphics::Color::operator!= (this=0x0, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
93	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
95	                        } else if(bgColor != Color(0,0,0,0)){
UI::Graphics::Color::Color (this=0xffffff800002dcc4, r=0 '\000', g=184 '\270', b=0 '\000', a=150 '\226') at include/interface/graphics/interface_graphics.h:21
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
UI::Graphics::Color::operator!= (this=0xffffff800002dce8, other=...) at include/interface/graphics/interface_graphics.h:24
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
UI::Graphics::DrawString (s=0xffffff800002e298 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=true) at src/interface/graphics/interface_graphics.cpp:95
95	                        } else if(bgColor != Color(0,0,0,0)){
87	                    for(int x = 0; x < Font->width; x++){
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
Continuing.
[Inferior 1 (process 1) exited normally]
Quit

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c12a in Handler0x2C ()
Single stepping until exit from function Handler0x2C,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
MouseDriver::HandleInterrupt (this=0xffffff80) at src/drivers/mouse.cpp:30
30	void MouseDriver::HandleInterrupt(){
31	    uint8_t status = IO::In(0x64);
IO::In (port=0) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:33
33	    uint8_t packetNumber = 0;
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
62	        status = IO::In(0x64);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:35
35	    while(status & 0x1){
36	        uint8_t packet = IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:38
38	        if(status & 0x20){
39	            buffer[packetNumber] = packet;
40	            packetNumber = (packetNumber + 1) % 3;
42	            if(packetNumber == 0){
43	                if(buffer[0] & 0b00001000){
51	                    float xMovement = (float)(int8_t)buffer[1];
52	                    float yMovement = (float)(int8_t)buffer[2];
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
IO::In (port=100) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
IO::In (port=96) at src/kernel/io.cpp:19
19	    uint8_t In(uint16_t port){
20	        uint8_t value = 0;
21	        asm volatile("inb %1, %0" : "=a"(value) : "Nd"(port));
22	        return value;
23	    } 
MouseDriver::HandleInterrupt (this=0xffffff800002dcc4) at src/drivers/mouse.cpp:57
57	                while(IO::In(0x64) & 0x1) IO::In(0x60);
58	                break;
66	}
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:216
216	        if(frame.int_number >= 0x20 && frame.int_number < 0x30){
217	            IO::Out(PIC1_COMMAND_PORT, 0x20);
IO::Out (port=65408, value=96 '`') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            if(frame.int_number >= 0x2A){
219	                IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:222
222	    }
0xffffff800001c15e in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
0xffffff800001c083 in Handler0xE ()
Single stepping until exit from function Handler0xE,
which has no line number information.
0xffffff800001c131 in isr_wrapper ()
Single stepping until exit from function isr_wrapper,
which has no line number information.
InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:200
200	    void HandleInterrupt(int_frame frame){
214	        handlers[frame.int_number].handler();
PageFaultHandler () at src/kernel/interrupt.cpp:72
72	void PageFaultHandler(){
78	    asm("mov %0, %%cr2" : "=r"(faultingAddress));
80	    DrawBox(0,0,100,100,Color::Red);
UI::Graphics::Color::Color (this=0xffffff8000011072 <MouseDriver::HandleInterrupt()+266>, code=-128) at include/interface/graphics/interface_graphics.h:28
28	            constexpr Color(ColorEnum code){
29	                switch (code)
37	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
42	            }
UI::Graphics::Color::Color (this=0xffffff800002dba0, code=UI::Graphics::Color::White) at include/interface/graphics/interface_graphics.h:28
28	            constexpr Color(ColorEnum code){
29	                switch (code)
35	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
42	            }
UI::Graphics::DrawBox (x=-128, y=118112, sizeX=0, sizeY=0, innerColor=..., outlineSize=85337, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:46
46	        void DrawBox(int x, int y, uint16_t sizeX, uint16_t sizeY, Color innerColor, int outlineSize, Color outlineColor){
47	            int startX = min(max(x, 0), (int)CurrentFrame.Width);
max<int> (a=-128, b=82082) at include/common/common.h:17
17	template<class T> T max(T a, T b){
18	    return (a < b) ? b : a;
19	}
min<int> (a=0, b=0) at include/common/common.h:21
21	template<class T> T min(T a, T b){
22	    return (a < b) ? a : b;
23	}
UI::Graphics::DrawBox (x=0, y=0, sizeX=100, sizeY=100, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:48
48	            int startY = min(max(y, 0), (int)CurrentFrame.Height);
max<int> (a=0, b=1600) at include/common/common.h:17
17	template<class T> T max(T a, T b){
18	    return (a < b) ? b : a;
19	}
min<int> (a=0, b=0) at include/common/common.h:21
21	template<class T> T min(T a, T b){
22	    return (a < b) ? a : b;
23	}
UI::Graphics::DrawBox (x=0, y=0, sizeX=100, sizeY=100, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:50
50	            uint16_t endX = min(x + sizeX, (int)CurrentFrame.Width);
min<int> (a=0, b=900) at include/common/common.h:21
21	template<class T> T min(T a, T b){
22	    return (a < b) ? a : b;
23	}
UI::Graphics::DrawBox (x=0, y=0, sizeX=100, sizeY=100, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:50
50	            uint16_t endX = min(x + sizeX, (int)CurrentFrame.Width);
51	            uint16_t endY = min(y + sizeY, (int)CurrentFrame.Height);
min<int> (a=100, b=1600) at include/common/common.h:21
21	template<class T> T min(T a, T b){
22	    return (a < b) ? a : b;
23	}
UI::Graphics::DrawBox (x=0, y=0, sizeX=100, sizeY=100, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:51
51	            uint16_t endY = min(y + sizeY, (int)CurrentFrame.Height);
53	            uint32_t innerColorInt = innerColor.ToInt();
UI::Graphics::Color::ToInt (this=0x6400000384) at src/interface/graphics/interface_graphics.cpp:22
22	        uint32_t Color::ToInt(){
23	            return (R << 16) | (G << 8) | B;
24	        }
UI::Graphics::DrawBox (x=0, y=0, sizeX=100, sizeY=100, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:55
55	            for(int i = startY; i < endY; i++){
56	                int row = i * CurrentFrame.Width;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
57	                for(int j = startX; j < endX; j++){
58	                    *((uint32_t*)FRAMEBUFFER + row + j) = innerColorInt;
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Program received signal SIGINT, Interrupt.
PageFaultHandler () at src/kernel/interrupt.cpp:85
85	}
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0xffffff8000015643 in kernel_main(KernelInfo) at src/kernel/main.cpp:199
	breakpoint already hit 1 time
2       breakpoint     keep y   0xffffff800001c082 <Handler0xE>
        set $i=1000000
        print "commands 2 : %d",$i
3       breakpoint     keep y   0xffffff800001c0dd <Handler0x21>
Continuing.

Program received signal SIGINT, Interrupt.
PageFaultHandler () at src/kernel/interrupt.cpp:85
85	}
0xffffff8000011e8e is in UI::Graphics::Color::operator!=(UI::Graphics::Color) (include/interface/graphics/interface_graphics.h:24).
19	                B = b;
20	            }
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
22	
23	            bool operator ==(Color other){ return R == other.R && G == other.G && B == other.B && A == other.A; }
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
25	
26	            uint32_t ToInt();
27	            
28	            constexpr Color(ColorEnum code){
0xffffff8000011eae is in UI::Graphics::Color::operator!=(UI::Graphics::Color) (include/interface/graphics/interface_graphics.h:24).
19	                B = b;
20	            }
21	            Color(uint8_t r, uint8_t g, uint8_t b, uint8_t a) : R(r), G(g), B(b), A(a) {}
22	
23	            bool operator ==(Color other){ return R == other.R && G == other.G && B == other.B && A == other.A; }
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
25	
26	            uint32_t ToInt();
27	            
28	            constexpr Color(ColorEnum code){
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000011e8e is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:29).
24	            bool operator !=(Color other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
25	
26	            uint32_t ToInt();
27	            
28	            constexpr Color(ColorEnum code){
29	                switch (code)
30	                {
31	                    case ColorEnum::Black: R = 0; G = 0; B = 0; break;
32	                    case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
33	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
Undefined command: "0xffffff800001d1f".  Try "help".
0xffffff8000013f31 is in PageFaultHandler() (src/kernel/interrupt.cpp:72).
67	
68	void DivByZeroHandler(){
69	    BSOD("You divided by zero, nerd");
70	}
71	
72	void PageFaultHandler(){
73	
74	    //BSOD("Faulty page access");
75	
76	
0xffffff8000011f66 is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:38).
33	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
34	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
35	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
36	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
37	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
38	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
39	
40	                    default: break;
41	                }  
42	            }
0xffffff8000011258 is in UI::Graphics::Frame::GetRows() (src/interface/graphics/interface_graphics.cpp:20).
warning: Source file is more recent than executable.
15	
16	namespace UI{
17	    namespace Graphics{
18	        namespace {
19	            bool initialized = false;
20	        }
21	
22	        Frame CurrentFrame;
23	        PSF_Font* Font;
24	
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
A syntax error in expression, near `: R(r), G(g), B(b), A(a) {}'.
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
0xffffff8000011268 is in Color::operator!=(Color const&) (src/interface/graphics/interface_graphics.cpp:10).
5	
6	extern char _binary_src_main_psf_start;
7	extern char _binary_src_main_psf_end;
8	
9	bool Color::operator==(const Color& other){ return R == other.R && G == other.G && B == other.B && A == other.A; }
10	bool Color::operator!=(const Color& other){ return R != other.R || G != other.G || B != other.B || A != other.A; }
11	
12	uint32_t Color::ToInt(){
13	    return (R << 16) | (G << 8) | B;
14	}
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000011f8c is in Color::Color(Color::ColorEnum) (include/interface/graphics/interface_graphics.h:32).
27	            case ColorEnum::Green: R = 0; G = 255; B = 0; break;
28	            case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
29	            case ColorEnum::Red: R = 255; G = 0; B = 0; break;
30	            case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
31	            case ColorEnum::White: R = 255; G = 255; B = 255; break;
32	            case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
33	
34	            default: break;
35	        }  
36	    }
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
0xffffff8000011f88 is in Color::Color(Color::ColorEnum) (include/interface/graphics/interface_graphics.h:32).
27	            case ColorEnum::Green: R = 0; G = 255; B = 0; break;
28	            case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
29	            case ColorEnum::Red: R = 255; G = 0; B = 0; break;
30	            case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
31	            case ColorEnum::White: R = 255; G = 255; B = 255; break;
32	            case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
33	
34	            default: break;
35	        }  
36	    }
Continuing.
[Inferior 1 (process 1) exited normally]

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000013f57 is in PageFaultHandler() (src/kernel/interrupt.cpp:72).
67	
68	void DivByZeroHandler(){
69	    BSOD("You divided by zero, nerd");
70	}
71	
72	void PageFaultHandler(){
73	
74	    //BSOD("Faulty page access");
75	
76	
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000012014 is in Color::Color(Color::ColorEnum) (include/interface/graphics/interface_graphics.h:32).
27	            case ColorEnum::Green: R = 0; G = 255; B = 0; break;
28	            case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
29	            case ColorEnum::Red: R = 255; G = 0; B = 0; break;
30	            case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
31	            case ColorEnum::White: R = 255; G = 255; B = 255; break;
32	            case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
33	
34	            default: break;
35	        }  
36	    }
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000011f78 is in Color::Color(Color::ColorEnum) (include/interface/graphics/interface_graphics.h:26).
21	    
22	    constexpr Color(ColorEnum code){
23	        switch (code)
24	        {
25	            case ColorEnum::Black: R = 0; G = 0; B = 0; break;
26	            case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
27	            case ColorEnum::Green: R = 0; G = 255; B = 0; break;
28	            case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
29	            case ColorEnum::Red: R = 255; G = 0; B = 0; break;
30	            case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000012014 is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:46).
41	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
42	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
43	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
44	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
45	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
46	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
47	
48	                    default: break;
49	                }  
50	            }
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff8000011ffb is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:45).
40	                    case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
41	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
42	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
43	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
44	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
45	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
46	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
47	
48	                    default: break;
49	                }  
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011ee0 <+0>:	endbr64 
   0xffffff8000011ee4 <+4>:	push   %rbp
   0xffffff8000011ee5 <+5>:	mov    %rsp,%rbp
   0xffffff8000011ee8 <+8>:	endbr64 
   0xffffff8000011eec <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011ee8 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011ef3 <+19>:	movabs $0x22840,%r11
   0xffffff8000011efd <+29>:	add    %r11,%rax
   0xffffff8000011f00 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011f04 <+36>:	mov    %esi,%eax
   0xffffff8000011f06 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011f0a <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0e <+46>:	movb   $0x0,(%rax)
   0xffffff8000011f11 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f15 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f19 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f1d <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f21 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f25 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011f29 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011f2d <+77>:	cmp    $0xd,%eax
   0xffffff8000011f30 <+80>:	ja     0xffffff8000012031 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011f36 <+86>:	mov    %eax,%eax
   0xffffff8000011f38 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011f40 <+96>:	lea    0x1c0f1(%rip),%rax        # 0xffffff800002e038
   0xffffff8000011f47 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f4b <+107>:	lea    0x1c0e6(%rip),%rdx        # 0xffffff800002e038
   0xffffff8000011f52 <+114>:	add    %rdx,%rax
   0xffffff8000011f55 <+117>:	notrack jmpq *%rax
   0xffffff8000011f58 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5c <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f5f <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f63 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f67 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6b <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f6f <+143>:	jmpq   0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f74 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f78 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011f7b <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7f <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f83 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f87 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f8b <+171>:	jmpq   0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f90 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f94 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011f97 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9b <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f9f <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa3 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fa7 <+199>:	jmpq   0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fac <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb0 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011fb3 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb7 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fbb <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fc3 <+227>:	jmp    0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fc5 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc9 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011fcc <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd0 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fd4 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd8 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fdc <+252>:	jmp    0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fde <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe2 <+258>:	movb   $0xff,(%rax)
   0xffffff8000011fe5 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe9 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011fed <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff1 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ff5 <+277>:	jmp    0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ff7 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ffb <+283>:	movb   $0xff,(%rax)
   0xffffff8000011ffe <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000012002 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000012006 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff800001200a <+298>:	movb   $0xff,0x2(%rax)
   0xffffff800001200e <+302>:	jmp    0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012010 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000012014 <+308>:	movb   $0x0,(%rax)
   0xffffff8000012017 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff800001201b <+315>:	movb   $0x0,0x1(%rax)
   0xffffff800001201f <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000012023 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000012027 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff800001202b <+331>:	movb   $0x0,0x3(%rax)
   0xffffff800001202f <+335>:	jmp    0xffffff8000012032 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012031 <+337>:	nop
   0xffffff8000012032 <+338>:	nop
   0xffffff8000012033 <+339>:	pop    %rbp
   0xffffff8000012034 <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
0xffffff800001405f is in PageFaultHandler() (src/kernel/interrupt.cpp:72).
67	
68	void DivByZeroHandler(){
69	    BSOD("You divided by zero, nerd");
70	}
71	
72	void PageFaultHandler(){
73	
74	    //BSOD("Faulty page access");
75	
76	
Quit
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
0xffffff8000011f76 is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:37).
32	            const static Color Transparent;*/
33	            uint32_t ToInt();
34	            
35	            
36	            constexpr Color(ColorEnum code){
37	                switch (code)
38	                {
39	                    case ColorEnum::Black: R = 0; G = 0; B = 0; break;
40	                    case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
41	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:199
199	    int h = 0;
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Continuing.

Breakpoint 3, 0xffffff800001c0dd in Handler0x21 ()
Continuing.
[Inferior 1 (process 1) exited normally]

Breakpoint 1, enableFPU () at src/kernel/main.cpp:210
warning: Source file is more recent than executable.
210	    cr4 |= 0x200;
0xffffff80000101d1 is in strlen(char*) (src/common/common.cpp:31).
26	    return d;
27	}*/
28	
29	uint32_t strlen(char* str){
30	    uint32_t c = 0;
31	    while(str[c] != 0){
32	        c++;
33	    }
34	    return c;
35	}
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Breakpoint 1, enableFPU () at src/kernel/main.cpp:206
206	void enableFPU(){
Argument required (expression to compute).
0xffffff80000101d8 is in strlen(char*) (src/common/common.cpp:32).
27	}*/
28	
29	uint32_t strlen(char* str){
30	    uint32_t c = 0;
31	    while(str[c] != 0){
32	        c++;
33	    }
34	    return c;
35	}
36	
Dump of assembler code for function strlen(char*):
   0xffffff800001019c <+0>:	endbr64 
   0xffffff80000101a0 <+4>:	push   %rbp
   0xffffff80000101a1 <+5>:	mov    %rsp,%rbp
   0xffffff80000101a4 <+8>:	endbr64 
   0xffffff80000101a8 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff80000101a4 <strlen(char*)+8>
   0xffffff80000101af <+19>:	movabs $0x257ac,%r11
   0xffffff80000101b9 <+29>:	add    %r11,%rax
   0xffffff80000101bc <+32>:	mov    %rdi,-0x18(%rbp)
   0xffffff80000101c0 <+36>:	movl   $0x0,-0x4(%rbp)
   0xffffff80000101c7 <+43>:	mov    -0x4(%rbp),%edx
   0xffffff80000101ca <+46>:	mov    -0x18(%rbp),%rax
   0xffffff80000101ce <+50>:	add    %rdx,%rax
   0xffffff80000101d1 <+53>:	movzbl (%rax),%eax
   0xffffff80000101d4 <+56>:	test   %al,%al
   0xffffff80000101d6 <+58>:	je     0xffffff80000101de <strlen(char*)+66>
   0xffffff80000101d8 <+60>:	addl   $0x1,-0x4(%rbp)
   0xffffff80000101dc <+64>:	jmp    0xffffff80000101c7 <strlen(char*)+43>
   0xffffff80000101de <+66>:	mov    -0x4(%rbp),%eax
   0xffffff80000101e1 <+69>:	pop    %rbp
   0xffffff80000101e2 <+70>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, enableFPU () at src/kernel/main.cpp:201
201	void enableFPU(){
Argument required (starting display address).
Continuing.
[Inferior 1 (process 1) exited normally]

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:201
201	    }
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:201
201	    }
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:201
201	    }
Dump of assembler code for function kernel_main(KernelInfo):
   0xffffff80000155db <+0>:	Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::White, Color::Transparent);
0xffffff8000011f6c is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:43).
38	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
39	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
40	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
41	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
42	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
44	
45	                    default: break;
46	                }  
47	            }
No function contains specified address.
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x22aa8,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1c199(%rip),%rax        # 0xffffff800002e038
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1c18e(%rip),%rdx        # 0xffffff800002e038
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Undefined command: "line".  Try "help".
0xffffff8000011f6c is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:43).
38	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
39	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
40	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
41	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
42	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
44	
45	                    default: break;
46	                }  
47	            }
0xffffff8000011e8e is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:34).
29	            static Color White;
30	            static Color Transparent;*/
31	            uint32_t ToInt();
32	            
33	            constexpr Color(ColorEnum code){
34	                switch (code)
35	                {
36	                    case ColorEnum::Black: R = 0; G = 0; B = 0; break;
37	                    case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
38	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, enableFPU () at src/kernel/main.cpp:198
198	    cr4 |= 0x200;
0xffffff8000011f68 is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:43).
38	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
39	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
40	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
41	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
42	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
44	
45	                    default: break;
46	                }  
47	            }
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x22ab0,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1c199(%rip),%rax        # 0xffffff800002e038
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1c18e(%rip),%rdx        # 0xffffff800002e038
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Continuing.

Breakpoint 2, 0xffffff800001c082 in Handler0xE ()
$1 = 1000000
Continuing.
[Inferior 1 (process 1) exited normally]
The program is not being run.
Quit

Breakpoint 1, enableFPU () at src/kernel/main.cpp:198
198	    cr4 |= 0x200;
0xffffff8000011f53 is in UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum) (include/interface/graphics/interface_graphics.h:42).
37	                    case ColorEnum::Blue: R = 0; G = 0; B = 255; break;
38	                    case ColorEnum::Green: R = 0; G = 255; B = 0; break;
39	                    case ColorEnum::Cyan: R = 0; G = 255; B = 255; break;
40	                    case ColorEnum::Red: R = 255; G = 0; B = 0; break;
41	                    case ColorEnum::Orange: R = 255; G = 180; B = 0; break;
42	                    case ColorEnum::White: R = 255; G = 255; B = 255; break;
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
44	
45	                    default: break;
46	                }  
No function contains specified address.
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x22ab0,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1c199(%rip),%rax        # 0xffffff800002e038
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1c18e(%rip),%rdx        # 0xffffff800002e038
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, enableFPU () at src/kernel/main.cpp:198
198	    cr4 |= 0x200;
Function "0xffffff8000011f6c" not defined.
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x23b40,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1d199(%rip),%rax        # 0xffffff800002f038
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1d18e(%rip),%rdx        # 0xffffff800002f038
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x23d78,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1d3d9(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1d3ce(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Detaching from program: , process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x23d78,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1d3d9(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1d3ce(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e38 <+0>:	endbr64 
   0xffffff8000011e3c <+4>:	push   %rbp
   0xffffff8000011e3d <+5>:	mov    %rsp,%rbp
   0xffffff8000011e40 <+8>:	endbr64 
   0xffffff8000011e44 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e40 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e4b <+19>:	movabs $0x23d98,%r11
   0xffffff8000011e55 <+29>:	add    %r11,%rax
   0xffffff8000011e58 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e5c <+36>:	mov    %esi,%eax
   0xffffff8000011e5e <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e62 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e66 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011e69 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e6d <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011e71 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e75 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011e79 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011e7d <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011e81 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011e85 <+77>:	cmp    $0xd,%eax
   0xffffff8000011e88 <+80>:	ja     0xffffff8000011f89 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011e8e <+86>:	mov    %eax,%eax
   0xffffff8000011e90 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011e98 <+96>:	lea    0x1d3d9(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011e9f <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ea3 <+107>:	lea    0x1d3ce(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011eaa <+114>:	add    %rdx,%rax
   0xffffff8000011ead <+117>:	notrack jmpq *%rax
   0xffffff8000011eb0 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb4 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011eb7 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ebb <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ebf <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ec3 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011ec7 <+143>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ecc <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed0 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011ed3 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed7 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011edb <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edf <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011ee3 <+171>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011ee8 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eec <+180>:	movb   $0x0,(%rax)
   0xffffff8000011eef <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef3 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ef7 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011efb <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eff <+199>:	jmpq   0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f04 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f08 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f0b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f13 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f17 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1b <+227>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f1d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f24 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f2c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f30 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f34 <+252>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f36 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3a <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f3d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f41 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f45 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f49 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f4d <+277>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f56 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5a <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5e <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f62 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f66 <+302>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f68 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+308>:	movb   $0x0,(%rax)
   0xffffff8000011f6f <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f73 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f77 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7b <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f7f <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f83 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011f87 <+335>:	jmp    0xffffff8000011f8a <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f89 <+337>:	nop
   0xffffff8000011f8a <+338>:	nop
   0xffffff8000011f8b <+339>:	pop    %rbp
   0xffffff8000011f8c <+340>:	retq   
End of assembler dump.
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011f20 <+0>:	endbr64 
   0xffffff8000011f24 <+4>:	push   %rbp
   0xffffff8000011f25 <+5>:	mov    %rsp,%rbp
   0xffffff8000011f28 <+8>:	endbr64 
   0xffffff8000011f2c <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011f28 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011f33 <+19>:	movabs $0x23cb0,%r11
   0xffffff8000011f3d <+29>:	add    %r11,%rax
   0xffffff8000011f40 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011f44 <+36>:	mov    %esi,%eax
   0xffffff8000011f46 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011f4a <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f4e <+46>:	movb   $0x0,(%rax)
   0xffffff8000011f51 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f55 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f59 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5d <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f61 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f65 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011f69 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011f6d <+77>:	cmp    $0xd,%eax
   0xffffff8000011f70 <+80>:	ja     0xffffff8000012071 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011f76 <+86>:	mov    %eax,%eax
   0xffffff8000011f78 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011f80 <+96>:	lea    0x1d2f1(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011f87 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f8b <+107>:	lea    0x1d2e6(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011f92 <+114>:	add    %rdx,%rax
   0xffffff8000011f95 <+117>:	notrack jmpq *%rax
   0xffffff8000011f98 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9c <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f9f <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa3 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fa7 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fab <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011faf <+143>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fb4 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb8 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011fbb <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fc3 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc7 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fcb <+171>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fd0 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd4 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011fd7 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fdb <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fdf <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe3 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fe7 <+199>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fec <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff0 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011ff3 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff7 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ffb <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fff <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000012003 <+227>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012005 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000012009 <+233>:	movb   $0xff,(%rax)
   0xffffff800001200c <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000012010 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000012014 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000012018 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff800001201c <+252>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001201e <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000012022 <+258>:	movb   $0xff,(%rax)
   0xffffff8000012025 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000012029 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff800001202d <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000012031 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000012035 <+277>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012037 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff800001203b <+283>:	movb   $0xff,(%rax)
   0xffffff800001203e <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000012042 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000012046 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff800001204a <+298>:	movb   $0xff,0x2(%rax)
   0xffffff800001204e <+302>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012050 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000012054 <+308>:	movb   $0x0,(%rax)
   0xffffff8000012057 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff800001205b <+315>:	movb   $0x0,0x1(%rax)
   0xffffff800001205f <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000012063 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000012067 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff800001206b <+331>:	movb   $0x0,0x3(%rax)
   0xffffff800001206f <+335>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012071 <+337>:	nop
   0xffffff8000012072 <+338>:	nop
   0xffffff8000012073 <+339>:	pop    %rbp
   0xffffff8000012074 <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Continuing.

Breakpoint 1, kernel_main (info=...) at src/kernel/main.cpp:198
198	        DrawString("test", 4, 0, 0, Color::FromHSV(h, 1, 1), Color::Transparent);
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.
[Inferior 1 (process 1) exited normally]
The program is not being run.
[Inferior 1 (process 1) exited normally]

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:220
220	    }
$1 = 1000000
Continuing.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:220
220	    }
$2 = 1000000
Invalid character ';' in expression.
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011f20 <+0>:	endbr64 
   0xffffff8000011f24 <+4>:	push   %rbp
   0xffffff8000011f25 <+5>:	mov    %rsp,%rbp
   0xffffff8000011f28 <+8>:	endbr64 
   0xffffff8000011f2c <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011f28 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011f33 <+19>:	movabs $0x23c88,%r11
   0xffffff8000011f3d <+29>:	add    %r11,%rax
   0xffffff8000011f40 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011f44 <+36>:	mov    %esi,%eax
   0xffffff8000011f46 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011f4a <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f4e <+46>:	movb   $0x0,(%rax)
   0xffffff8000011f51 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f55 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f59 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5d <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f61 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f65 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011f69 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011f6d <+77>:	cmp    $0xd,%eax
   0xffffff8000011f70 <+80>:	ja     0xffffff8000012071 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011f76 <+86>:	mov    %eax,%eax
   0xffffff8000011f78 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011f80 <+96>:	lea    0x1d2f1(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011f87 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f8b <+107>:	lea    0x1d2e6(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011f92 <+114>:	add    %rdx,%rax
   0xffffff8000011f95 <+117>:	notrack jmpq *%rax
   0xffffff8000011f98 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9c <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f9f <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa3 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fa7 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fab <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011faf <+143>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fb4 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb8 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011fbb <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fc3 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc7 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fcb <+171>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fd0 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd4 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011fd7 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fdb <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fdf <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe3 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fe7 <+199>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fec <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff0 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011ff3 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff7 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ffb <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fff <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000012003 <+227>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012005 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000012009 <+233>:	movb   $0xff,(%rax)
   0xffffff800001200c <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000012010 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000012014 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000012018 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff800001201c <+252>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001201e <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000012022 <+258>:	movb   $0xff,(%rax)
   0xffffff8000012025 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000012029 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff800001202d <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000012031 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000012035 <+277>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012037 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff800001203b <+283>:	movb   $0xff,(%rax)
   0xffffff800001203e <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000012042 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000012046 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff800001204a <+298>:	movb   $0xff,0x2(%rax)
   0xffffff800001204e <+302>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012050 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000012054 <+308>:	movb   $0x0,(%rax)
   0xffffff8000012057 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff800001205b <+315>:	movb   $0x0,0x1(%rax)
   0xffffff800001205f <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000012063 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000012067 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff800001206b <+331>:	movb   $0x0,0x3(%rax)
   0xffffff800001206f <+335>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012071 <+337>:	nop
   0xffffff8000012072 <+338>:	nop
   0xffffff8000012073 <+339>:	pop    %rbp
   0xffffff8000012074 <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:220
220	    }
$1 = 1000000
Continuing.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:220
220	    }
$2 = 1000000
Continuing.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:220
220	    }
$3 = 1000000
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            int i = 0;
$1 = 1000000
220	    }
0xffffff8000015197	220	    }
0xffffff800001519b	220	    }
0xffffff800001519c	220	    }
0xffffff800001519e	220	    }
0xffffff800001519f	220	    }
0xffffff800001d3af in isr_wrapper ()
0xffffff800001d3b0 in isr_wrapper ()
0xffffff800001d3b2 in isr_wrapper ()
0xffffff800001d3b4 in isr_wrapper ()
0xffffff800001d3b6 in isr_wrapper ()
0xffffff800001d3b8 in isr_wrapper ()
0xffffff800001d3ba in isr_wrapper ()
0xffffff800001d3bc in isr_wrapper ()
0xffffff800001d3be in isr_wrapper ()
0xffffff800001d3c0 in isr_wrapper ()
0xffffff800001d3c2 in isr_wrapper ()
0xffffff800001d3c4 in isr_wrapper ()
0xffffff800001d3c6 in isr_wrapper ()
0xffffff800001d3c8 in isr_wrapper ()
0xffffff800001d3c9 in isr_wrapper ()
0xffffff800001d3ca in isr_wrapper ()
0xffffff800001d3cb in isr_wrapper ()
0xffffff800001d3cc in isr_wrapper ()
0xffffff800001d3cd in isr_wrapper ()
0xffffff800001d3ce in isr_wrapper ()
0xffffff800001d3cf in isr_wrapper ()
0xffffff800001d3d0 in isr_wrapper ()
0xffffff800001d3d4 in isr_wrapper ()
0xffffff800001d3d5 in isr_wrapper ()
0xffffff8000011f76 in UI::Graphics::Color::Color (this=0x0, code=-128) at include/interface/graphics/interface_graphics.h:34
34	                switch (code)
rax            0xd                 13
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xa                 10
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000011f76  0xffffff8000011f76 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+86>
eflags         0x200246            [ ID IOPL=0 IF ZF PF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
rax            0xd                 13
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xa                 10
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000011f76  0xffffff8000011f76 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+86>
eflags         0x200246            [ ID IOPL=0 IF ZF PF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
0xffffff8000011f78	34	                switch (code)
0xffffff8000011f80	34	                switch (code)
0xffffff8000011f87	34	                switch (code)
0xffffff8000011f8b	34	                switch (code)
0xffffff8000011f92	34	                switch (code)
0xffffff8000011f95	34	                switch (code)
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
0xffffff8000012054	43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
0xffffff8000013fbd in PageFaultHandler () at src/kernel/interrupt.cpp:70
70	void PageFaultHandler(){
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011f20 <+0>:	endbr64 
   0xffffff8000011f24 <+4>:	push   %rbp
   0xffffff8000011f25 <+5>:	mov    %rsp,%rbp
   0xffffff8000011f28 <+8>:	endbr64 
   0xffffff8000011f2c <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011f28 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011f33 <+19>:	movabs $0x23c88,%r11
   0xffffff8000011f3d <+29>:	add    %r11,%rax
   0xffffff8000011f40 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011f44 <+36>:	mov    %esi,%eax
   0xffffff8000011f46 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011f4a <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f4e <+46>:	movb   $0x0,(%rax)
   0xffffff8000011f51 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f55 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f59 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5d <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f61 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f65 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011f69 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011f6d <+77>:	cmp    $0xd,%eax
   0xffffff8000011f70 <+80>:	ja     0xffffff8000012071 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011f76 <+86>:	mov    %eax,%eax
   0xffffff8000011f78 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011f80 <+96>:	lea    0x1d2f1(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011f87 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f8b <+107>:	lea    0x1d2e6(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011f92 <+114>:	add    %rdx,%rax
   0xffffff8000011f95 <+117>:	notrack jmpq *%rax
   0xffffff8000011f98 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9c <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f9f <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa3 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fa7 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fab <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011faf <+143>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fb4 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb8 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011fbb <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fc3 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc7 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fcb <+171>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fd0 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd4 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011fd7 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fdb <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fdf <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe3 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fe7 <+199>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fec <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff0 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011ff3 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff7 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ffb <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fff <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000012003 <+227>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012005 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000012009 <+233>:	movb   $0xff,(%rax)
   0xffffff800001200c <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000012010 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000012014 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000012018 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff800001201c <+252>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001201e <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000012022 <+258>:	movb   $0xff,(%rax)
   0xffffff8000012025 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000012029 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff800001202d <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000012031 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000012035 <+277>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012037 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff800001203b <+283>:	movb   $0xff,(%rax)
   0xffffff800001203e <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000012042 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000012046 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff800001204a <+298>:	movb   $0xff,0x2(%rax)
   0xffffff800001204e <+302>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012050 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000012054 <+308>:	movb   $0x0,(%rax)
   0xffffff8000012057 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff800001205b <+315>:	movb   $0x0,0x1(%rax)
   0xffffff800001205f <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000012063 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000012067 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff800001206b <+331>:	movb   $0x0,0x3(%rax)
   0xffffff800001206f <+335>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012071 <+337>:	nop
   0xffffff8000012072 <+338>:	nop
   0xffffff8000012073 <+339>:	pop    %rbp
   0xffffff8000012074 <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 2, InterruptManager::HandleInterrupt (frame=...) at src/kernel/interrupt.cpp:218
218	            int i = 0;
$1 = 1000000
220	    }
0xffffff8000015197	220	    }
0xffffff800001519b	220	    }
0xffffff800001519c	220	    }
0xffffff800001519e	220	    }
0xffffff800001519f	220	    }
0xffffff800001d3af in isr_wrapper ()
0xffffff800001d3b0 in isr_wrapper ()
0xffffff800001d3b2 in isr_wrapper ()
0xffffff800001d3b4 in isr_wrapper ()
0xffffff800001d3b6 in isr_wrapper ()
0xffffff800001d3b8 in isr_wrapper ()
0xffffff800001d3ba in isr_wrapper ()
0xffffff800001d3bc in isr_wrapper ()
0xffffff800001d3be in isr_wrapper ()
0xffffff800001d3c0 in isr_wrapper ()
0xffffff800001d3c2 in isr_wrapper ()
0xffffff800001d3c4 in isr_wrapper ()
0xffffff800001d3c6 in isr_wrapper ()
0xffffff800001d3c8 in isr_wrapper ()
0xffffff800001d3c9 in isr_wrapper ()
0xffffff800001d3ca in isr_wrapper ()
0xffffff800001d3cb in isr_wrapper ()
0xffffff800001d3cc in isr_wrapper ()
0xffffff800001d3cd in isr_wrapper ()
0xffffff800001d3ce in isr_wrapper ()
0xffffff800001d3cf in isr_wrapper ()
0xffffff800001d3d0 in isr_wrapper ()
0xffffff800001d3d4 in isr_wrapper ()
0xffffff800001d3d5 in isr_wrapper ()
UI::Graphics::Color::Color (this=0x0, code=-128) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
rax            0xffffff8000012050  -549755740080
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xffffff800002f278  -549755620744
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000012050  0xffffff8000012050 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+304>
eflags         0x200297            [ ID IOPL=0 IF SF AF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
rax            0xffffff8000012050  -549755740080
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xffffff800002f278  -549755620744
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000012050  0xffffff8000012050 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+304>
eflags         0x200297            [ ID IOPL=0 IF SF AF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
0xffffff8000012054	43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
rax            0x0                 0
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xffffff800002f278  -549755620744
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000012054  0xffffff8000012054 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+308>
eflags         0x200297            [ ID IOPL=0 IF SF AF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
rax            0x0                 0
rbx            0xffffff8000035bb0  -549755593808
rcx            0x1                 1
rdx            0xffffff800002f278  -549755620744
rsi            0xd                 13
rdi            0xffffff800002ef84  -549755621500
rbp            0xffffff800002ef10  0xffffff800002ef10
rsp            0xffffff800002ef10  0xffffff800002ef10
r8             0xff0000ff          4278190335
r9             0x0                 0
r10            0x0                 0
r11            0x23c88             146568
r12            0x0                 0
r13            0x0                 0
r14            0x0                 0
r15            0xffffff8000035bb0  -549755593808
rip            0xffffff8000012054  0xffffff8000012054 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+308>
eflags         0x200297            [ ID IOPL=0 IF SF AF PF CF ]
cs             0x8                 8
ss             0x0                 0
ds             0x0                 0
es             0x0                 0
fs             0x0                 0
gs             0x0                 0
fs_base        0x0                 0
gs_base        0x0                 0
k_gs_base      0x0                 0
cr0            0x80010011          [ PG WP ET PE ]
cr2            0x0                 0
cr3            0x36000             [ PDBR=0 PCID=0 ]
cr4            0x220               [ OSFXSR PAE ]
cr8            0x0                 0
efer           0x500               [ LMA LME ]
xmm0           {v4_float = {0xff, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x7f, 0x43, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x437f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x437f0000, 0x0, 0x0, 0x0}, v2_int64 = {0x437f0000, 0x0}, uint128 = 0x437f0000}
xmm1           {v4_float = {0x1, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0, 0x0, 0x80, 0x3f, 0x0 <repeats 12 times>}, v8_int16 = {0x0, 0x3f80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x3f800000, 0x0, 0x0, 0x0}, v2_int64 = {0x3f800000, 0x0}, uint128 = 0x3f800000}
xmm2           {v4_float = {0x0, 0x1, 0x0, 0x0}, v2_double = {0x1, 0x0}, v16_int8 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0xf0, 0x3f, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v8_int16 = {0x0, 0x0, 0x0, 0x3ff0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x3ff00000, 0x0, 0x0}, v2_int64 = {0x3ff0000000000000, 0x0}, uint128 = 0x3ff0000000000000}
xmm3           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm4           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm5           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm6           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm7           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm8           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm9           {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm10          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm11          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm12          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm13          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm14          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
xmm15          {v4_float = {0x0, 0x0, 0x0, 0x0}, v2_double = {0x0, 0x0}, v16_int8 = {0x0 <repeats 16 times>}, v8_int16 = {0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0}, v4_int32 = {0x0, 0x0, 0x0, 0x0}, v2_int64 = {0x0, 0x0}, uint128 = 0x0}
mxcsr          0x1f80              [ IM DM ZM OM UM PM ]
0xffffff8000013fbd in PageFaultHandler () at src/kernel/interrupt.cpp:70
70	void PageFaultHandler(){
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011f20 <+0>:	endbr64 
   0xffffff8000011f24 <+4>:	push   %rbp
   0xffffff8000011f25 <+5>:	mov    %rsp,%rbp
   0xffffff8000011f28 <+8>:	endbr64 
   0xffffff8000011f2c <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011f28 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011f33 <+19>:	movabs $0x23c88,%r11
   0xffffff8000011f3d <+29>:	add    %r11,%rax
   0xffffff8000011f40 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011f44 <+36>:	mov    %esi,%eax
   0xffffff8000011f46 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011f4a <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f4e <+46>:	movb   $0x0,(%rax)
   0xffffff8000011f51 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f55 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f59 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5d <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f61 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f65 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011f69 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011f6d <+77>:	cmp    $0xd,%eax
   0xffffff8000011f70 <+80>:	ja     0xffffff8000012071 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011f76 <+86>:	mov    %eax,%eax
   0xffffff8000011f78 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011f80 <+96>:	lea    0x1d2f1(%rip),%rax        # 0xffffff800002f278
   0xffffff8000011f87 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f8b <+107>:	lea    0x1d2e6(%rip),%rdx        # 0xffffff800002f278
   0xffffff8000011f92 <+114>:	add    %rdx,%rax
   0xffffff8000011f95 <+117>:	notrack jmpq *%rax
   0xffffff8000011f98 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9c <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f9f <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa3 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fa7 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fab <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011faf <+143>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fb4 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb8 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011fbb <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fc3 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc7 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fcb <+171>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fd0 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd4 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011fd7 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fdb <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fdf <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe3 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fe7 <+199>:	jmpq   0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fec <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff0 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011ff3 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ff7 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011ffb <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fff <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000012003 <+227>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012005 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000012009 <+233>:	movb   $0xff,(%rax)
   0xffffff800001200c <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000012010 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000012014 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000012018 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff800001201c <+252>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001201e <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000012022 <+258>:	movb   $0xff,(%rax)
   0xffffff8000012025 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000012029 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff800001202d <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000012031 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000012035 <+277>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012037 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff800001203b <+283>:	movb   $0xff,(%rax)
   0xffffff800001203e <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000012042 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000012046 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff800001204a <+298>:	movb   $0xff,0x2(%rax)
   0xffffff800001204e <+302>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012050 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000012054 <+308>:	movb   $0x0,(%rax)
   0xffffff8000012057 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff800001205b <+315>:	movb   $0x0,0x1(%rax)
   0xffffff800001205f <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000012063 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000012067 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff800001206b <+331>:	movb   $0x0,0x3(%rax)
   0xffffff800001206f <+335>:	jmp    0xffffff8000012072 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012071 <+337>:	nop
   0xffffff8000012072 <+338>:	nop
   0xffffff8000012073 <+339>:	pop    %rbp
   0xffffff8000012074 <+340>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.
[Inferior 1 (process 1) exited normally]

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef34, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef3c, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef44, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef4c, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef54, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef5c, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef64, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef6c, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef74, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef7c, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
47	            }
UI::Graphics::Color::FromHSV (hue=27200, saturation=1, value=255) at include/interface/graphics/interface_graphics.h:49
49	            static Color FromHSV(int hue, float saturation, float value){
50	                Color out;
UI::Graphics::Color::Color (this=0xffff0000ff0000ff) at include/interface/graphics/interface_graphics.h:16
16	            Color() {}
Continuing.

Breakpoint 3, UI::Graphics::Color::Color (this=0xffffff800002ef84, code=UI::Graphics::Color::Transparent) at include/interface/graphics/interface_graphics.h:43
43	                    case ColorEnum::Transparent: R = 0; G = 0; B = 0; A = 0; break;
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.
[Inferior 1 (process 1) exited normally]
[Inferior 1 (process 1) exited normally]
The program is not being run.

Breakpoint 4, MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:67
67	}
Continuing.
[Inferior 1 (process 1) exited normally]

Breakpoint 4, MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:65
warning: Source file is more recent than executable.
65	    IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:66
66	}
0xffffff8000011121	66	}
0xffffff8000011125	66	}
0xffffff8000011128	66	}
0xffffff800001112d	66	}
0xffffff8000011137	66	}
0xffffff800001113a	66	}
Terminal::Println (s=0xffffff800002f2d8 "Mouse handler called") at src/interface/graphics/terminal.cpp:71
71	    void Println(char* s...){
0xffffff800001299b	71	    void Println(char* s...){
0xffffff800001299c	71	    void Println(char* s...){
0xffffff800001299f	71	    void Println(char* s...){
0xffffff80000129a1	71	    void Println(char* s...){
0xffffff80000129a2	71	    void Println(char* s...){
0xffffff80000129a9	71	    void Println(char* s...){
73	        va_start(args, s);
75	        int column = 0;
76	        int strLen = strlen(s);
strlen (str=0xffffff8000035c78 "") at src/common/common.cpp:29
29	uint32_t strlen(char* str){
30	    uint32_t c = 0;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
32	        c++;
31	    while(str[c] != 0){
35	                int row = y * CurrentFrame.Width;
36	                for(int x = 0; x < CurrentFrame.Width; x++){
36	                for(int x = 0; x < CurrentFrame.Width; x++){
37	                    *((uint32_t*)FRAMEBUFFER + x + row) = *((uint32_t*)FRAMEBUFFER + x + (y + Font->height) * CurrentFrame.Width);
Continuing.
[Inferior 1 (process 1) exited normally]

Breakpoint 4, MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:65
warning: Source file is more recent than executable.
65	    IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff800001548d	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff800001548e	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff8000015491	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff8000015495	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff800001549c	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154a6	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154a9	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154ab	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154ad	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154b1	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154b3	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154ba	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154be	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154c0	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
0xffffff80000154c1	24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:66
66	}
0xffffff8000011121	66	}
0xffffff8000011125	66	}
0xffffff8000011128	66	}
0xffffff800001112d	66	}
0xffffff8000011137	66	}
0xffffff800001113a	66	}
Terminal::Println (s=0xffffff800002f2d8 "Mouse handler called") at src/interface/graphics/terminal.cpp:71
71	    void Println(char* s...){
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Breakpoint 4, MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:64
64	    IO::Out(PIC2_COMMAND_PORT, 0x20);
0xffffff80000110db	64	    IO::Out(PIC2_COMMAND_PORT, 0x20);
0xffffff80000110e0	64	    IO::Out(PIC2_COMMAND_PORT, 0x20);
IO::Out (port=32, value=32 ' ') at src/kernel/io.cpp:24
24	    void Out(uint16_t port, uint8_t value){  asm volatile("outb %0, %1" : : "a"(value), "Nd"(port)); }
MouseDriver::HandleInterrupt (this=0xffffff800002eef4) at src/drivers/mouse.cpp:65
65	}
0xffffff800001d404 in mouse_asm ()
0xffffff800001d405 in mouse_asm ()
0xffffff800001d407 in mouse_asm ()
0xffffff800001d409 in mouse_asm ()
0xffffff800001d40b in mouse_asm ()
0xffffff800001d40d in mouse_asm ()
0xffffff800001d40f in mouse_asm ()
0xffffff800001d411 in mouse_asm ()
0xffffff800001d413 in mouse_asm ()
0xffffff800001d415 in mouse_asm ()
0xffffff800001d417 in mouse_asm ()
0xffffff800001d419 in mouse_asm ()
0xffffff800001d41b in mouse_asm ()
0xffffff800001d41d in mouse_asm ()
0xffffff800001d41e in mouse_asm ()
0xffffff800001d41f in mouse_asm ()
0xffffff800001d420 in mouse_asm ()
0xffffff800001d421 in mouse_asm ()
0xffffff800001d422 in mouse_asm ()
0xffffff800001d423 in mouse_asm ()
0xffffff800001d424 in mouse_asm ()
0xffffff800001d425 in mouse_asm ()
0xffffff800001d429 in mouse_asm ()
0xffffff800001d42a in mouse_asm ()
0xffffff8000013ff5 in PageFaultHandler () at src/kernel/interrupt.cpp:71
71	void PageFaultHandler(){
0xffffff8000013ff6	71	void PageFaultHandler(){
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Program received signal SIGINT, Interrupt.
0xffffff8000011a15 in UI::Graphics::DrawString (s=0xffffff800002f784 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:115
115	                    for(int x = 0; x < Font->width; x++){
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011f88 <+0>:	endbr64 
   0xffffff8000011f8c <+4>:	push   %rbp
   0xffffff8000011f8d <+5>:	mov    %rsp,%rbp
   0xffffff8000011f90 <+8>:	endbr64 
   0xffffff8000011f94 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011f90 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011f9b <+19>:	movabs $0x23cc8,%r11
   0xffffff8000011fa5 <+29>:	add    %r11,%rax
   0xffffff8000011fa8 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011fac <+36>:	mov    %esi,%eax
   0xffffff8000011fae <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011fb2 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb6 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011fb9 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbd <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fc1 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc5 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fc9 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fcd <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011fd1 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011fd5 <+77>:	cmp    $0xd,%eax
   0xffffff8000011fd8 <+80>:	ja     0xffffff80000120d9 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011fde <+86>:	mov    %eax,%eax
   0xffffff8000011fe0 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011fe8 <+96>:	lea    0x1d2f9(%rip),%rax        # 0xffffff800002f2e8
   0xffffff8000011fef <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011ff3 <+107>:	lea    0x1d2ee(%rip),%rdx        # 0xffffff800002f2e8
   0xffffff8000011ffa <+114>:	add    %rdx,%rax
   0xffffff8000011ffd <+117>:	notrack jmpq *%rax
   0xffffff8000012000 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000012004 <+124>:	movb   $0x0,(%rax)
   0xffffff8000012007 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff800001200b <+131>:	movb   $0x0,0x1(%rax)
   0xffffff800001200f <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000012013 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000012017 <+143>:	jmpq   0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001201c <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000012020 <+152>:	movb   $0x0,(%rax)
   0xffffff8000012023 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000012027 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff800001202b <+163>:	mov    -0x8(%rbp),%rax
   0xffffff800001202f <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000012033 <+171>:	jmpq   0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012038 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff800001203c <+180>:	movb   $0x0,(%rax)
   0xffffff800001203f <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000012043 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000012047 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff800001204b <+195>:	movb   $0x0,0x2(%rax)
   0xffffff800001204f <+199>:	jmpq   0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012054 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000012058 <+208>:	movb   $0x0,(%rax)
   0xffffff800001205b <+211>:	mov    -0x8(%rbp),%rax
   0xffffff800001205f <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000012063 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000012067 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff800001206b <+227>:	jmp    0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001206d <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000012071 <+233>:	movb   $0xff,(%rax)
   0xffffff8000012074 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000012078 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff800001207c <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000012080 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000012084 <+252>:	jmp    0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000012086 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff800001208a <+258>:	movb   $0xff,(%rax)
   0xffffff800001208d <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000012091 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000012095 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000012099 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff800001209d <+277>:	jmp    0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff800001209f <+279>:	mov    -0x8(%rbp),%rax
   0xffffff80000120a3 <+283>:	movb   $0xff,(%rax)
   0xffffff80000120a6 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff80000120aa <+290>:	movb   $0xff,0x1(%rax)
   0xffffff80000120ae <+294>:	mov    -0x8(%rbp),%rax
   0xffffff80000120b2 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff80000120b6 <+302>:	jmp    0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff80000120b8 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff80000120bc <+308>:	movb   $0x0,(%rax)
   0xffffff80000120bf <+311>:	mov    -0x8(%rbp),%rax
   0xffffff80000120c3 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff80000120c7 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff80000120cb <+323>:	movb   $0x0,0x2(%rax)
   0xffffff80000120cf <+327>:	mov    -0x8(%rbp),%rax
   0xffffff80000120d3 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff80000120d7 <+335>:	jmp    0xffffff80000120da <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff80000120d9 <+337>:	nop
   0xffffff80000120da <+338>:	nop
   0xffffff80000120db <+339>:	pop    %rbp
   0xffffff80000120dc <+340>:	retq   
End of assembler dump.
No function contains specified address.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Program received signal SIGINT, Interrupt.
UI::Graphics::DrawString (s=0xffffff800002f784 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:118
118	                        } else if(bgColor.A != 0){
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e9e <+0>:	endbr64 
   0xffffff8000011ea2 <+4>:	push   %rbp
   0xffffff8000011ea3 <+5>:	mov    %rsp,%rbp
   0xffffff8000011ea6 <+8>:	endbr64 
   0xffffff8000011eaa <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011ea6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011eb1 <+19>:	movabs $0x23db2,%r11
   0xffffff8000011ebb <+29>:	add    %r11,%rax
   0xffffff8000011ebe <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011ec2 <+36>:	mov    %esi,%eax
   0xffffff8000011ec4 <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011ec8 <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ecc <+46>:	movb   $0x0,(%rax)
   0xffffff8000011ecf <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ed3 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ed7 <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011edb <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011edf <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ee3 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011ee7 <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011eeb <+77>:	cmp    $0xd,%eax
   0xffffff8000011eee <+80>:	ja     0xffffff8000011fef <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011ef4 <+86>:	mov    %eax,%eax
   0xffffff8000011ef6 <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011efe <+96>:	lea    0x1d3e3(%rip),%rax        # 0xffffff800002f2e8
   0xffffff8000011f05 <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011f09 <+107>:	lea    0x1d3d8(%rip),%rdx        # 0xffffff800002f2e8
   0xffffff8000011f10 <+114>:	add    %rdx,%rax
   0xffffff8000011f13 <+117>:	notrack jmpq *%rax
   0xffffff8000011f16 <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f1a <+124>:	movb   $0x0,(%rax)
   0xffffff8000011f1d <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f21 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f25 <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f29 <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f2d <+143>:	jmpq   0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f32 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f36 <+152>:	movb   $0x0,(%rax)
   0xffffff8000011f39 <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f3d <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f41 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f45 <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f49 <+171>:	jmpq   0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f4e <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f52 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011f55 <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f59 <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f5d <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f61 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f65 <+199>:	jmpq   0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f6a <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6e <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f71 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f75 <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f79 <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7d <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f81 <+227>:	jmp    0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f83 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f87 <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f8a <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f8e <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f92 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f96 <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f9a <+252>:	jmp    0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f9c <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa0 <+258>:	movb   $0xff,(%rax)
   0xffffff8000011fa3 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa7 <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011fab <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011faf <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fb3 <+277>:	jmp    0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fb5 <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb9 <+283>:	movb   $0xff,(%rax)
   0xffffff8000011fbc <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc0 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011fc4 <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fc8 <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fcc <+302>:	jmp    0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fce <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd2 <+308>:	movb   $0x0,(%rax)
   0xffffff8000011fd5 <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fd9 <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fdd <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe1 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fe5 <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fe9 <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011fed <+335>:	jmp    0xffffff8000011ff0 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fef <+337>:	nop
   0xffffff8000011ff0 <+338>:	nop
   0xffffff8000011ff1 <+339>:	pop    %rbp
   0xffffff8000011ff2 <+340>:	retq   
End of assembler dump.
Dump of assembler code for function MouseDriver::HandleInterrupt(int_frame):
   0xffffff8000010f68 <+0>:	endbr64 
   0xffffff8000010f6c <+4>:	push   %rbp
   0xffffff8000010f6d <+5>:	mov    %rsp,%rbp
   0xffffff8000010f70 <+8>:	push   %r15
   0xffffff8000010f72 <+10>:	push   %rbx
   0xffffff8000010f73 <+11>:	sub    $0x20,%rsp
   0xffffff8000010f77 <+15>:	endbr64 
   0xffffff8000010f7b <+19>:	lea    -0xb(%rip),%rbx        # 0xffffff8000010f77 <MouseDriver::HandleInterrupt(int_frame)+15>
   0xffffff8000010f82 <+26>:	movabs $0x24ce1,%r11
   0xffffff8000010f8c <+36>:	add    %r11,%rbx
   0xffffff8000010f8f <+39>:	mov    %rdi,-0x28(%rbp)
   0xffffff8000010f93 <+43>:	mov    0xa0(%rbp),%rax
   0xffffff8000010f9a <+50>:	mov    %rax,%rsi
   0xffffff8000010f9d <+53>:	movabs $0xffffffffffff9680,%rax
   0xffffff8000010fa7 <+63>:	lea    (%rbx,%rax,1),%rdi
   0xffffff8000010fab <+67>:	mov    %rbx,%r15
   0xffffff8000010fae <+70>:	mov    $0x0,%eax
   0xffffff8000010fb3 <+75>:	movabs $0xfffffffffffdcc3b,%rdx
   0xffffff8000010fbd <+85>:	add    %rbx,%rdx
   0xffffff8000010fc0 <+88>:	callq  *%rdx
   0xffffff8000010fc2 <+90>:	mov    $0x64,%edi
   0xffffff8000010fc7 <+95>:	mov    %rbx,%r15
   0xffffff8000010fca <+98>:	movabs $0xfffffffffffdf6f3,%rax
   0xffffff8000010fd4 <+108>:	add    %rbx,%rax
   0xffffff8000010fd7 <+111>:	callq  *%rax
   0xffffff8000010fd9 <+113>:	movzbl %al,%eax
   0xffffff8000010fdc <+116>:	and    $0x1,%eax
   0xffffff8000010fdf <+119>:	test   %eax,%eax
   0xffffff8000010fe1 <+121>:	setne  %al
   0xffffff8000010fe4 <+124>:	test   %al,%al
   0xffffff8000010fe6 <+126>:	je     0xffffff8000011001 <MouseDriver::HandleInterrupt(int_frame)+153>
   0xffffff8000010fe8 <+128>:	mov    $0x60,%edi
   0xffffff8000010fed <+133>:	mov    %rbx,%r15
   0xffffff8000010ff0 <+136>:	movabs $0xfffffffffffdf6f3,%rax
   0xffffff8000010ffa <+146>:	add    %rbx,%rax
   0xffffff8000010ffd <+149>:	callq  *%rax
   0xffffff8000010fff <+151>:	jmp    0xffffff8000010fc2 <MouseDriver::HandleInterrupt(int_frame)+90>
   0xffffff8000011001 <+153>:	mov    $0x20,%esi
   0xffffff8000011006 <+158>:	mov    $0x20,%edi
   0xffffff800001100b <+163>:	mov    %rbx,%r15
   0xffffff800001100e <+166>:	movabs $0xfffffffffffdf72d,%rax
   0xffffff8000011018 <+176>:	add    %rbx,%rax
   0xffffff800001101b <+179>:	callq  *%rax
   0xffffff800001101d <+181>:	mov    $0x20,%esi
   0xffffff8000011022 <+186>:	mov    $0xa0,%edi
   0xffffff8000011027 <+191>:	mov    %rbx,%r15
   0xffffff800001102a <+194>:	movabs $0xfffffffffffdf72d,%rax
   0xffffff8000011034 <+204>:	add    %rbx,%rax
   0xffffff8000011037 <+207>:	callq  *%rax
   0xffffff8000011039 <+209>:	add    $0x20,%rsp
   0xffffff800001103d <+213>:	pop    %rbx
   0xffffff800001103e <+214>:	pop    %r15
   0xffffff8000011040 <+216>:	pop    %rbp
   0xffffff8000011041 <+217>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Program received signal SIGINT, Interrupt.
UI::Graphics::DrawString (s=0xffffff800002f774 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:118
118	                        } else if(bgColor.A != 0){
Dump of assembler code for function MouseDriver::HandleInterrupt(int_frame):
   0xffffff8000010f68 <+0>:	endbr64 
   0xffffff8000010f6c <+4>:	push   %rbp
   0xffffff8000010f6d <+5>:	mov    %rsp,%rbp
   0xffffff8000010f70 <+8>:	push   %r15
   0xffffff8000010f72 <+10>:	push   %rbx
   0xffffff8000010f73 <+11>:	sub    $0x20,%rsp
   0xffffff8000010f77 <+15>:	endbr64 
   0xffffff8000010f7b <+19>:	lea    -0xb(%rip),%rbx        # 0xffffff8000010f77 <MouseDriver::HandleInterrupt(int_frame)+15>
   0xffffff8000010f82 <+26>:	movabs $0x24cd1,%r11
   0xffffff8000010f8c <+36>:	add    %r11,%rbx
   0xffffff8000010f8f <+39>:	mov    %rdi,-0x28(%rbp)
   0xffffff8000010f93 <+43>:	mov    $0x64,%edi
   0xffffff8000010f98 <+48>:	mov    %rbx,%r15
   0xffffff8000010f9b <+51>:	movabs $0xfffffffffffdf6d5,%rax
   0xffffff8000010fa5 <+61>:	add    %rbx,%rax
   0xffffff8000010fa8 <+64>:	callq  *%rax
   0xffffff8000010faa <+66>:	movzbl %al,%eax
   0xffffff8000010fad <+69>:	and    $0x1,%eax
   0xffffff8000010fb0 <+72>:	test   %eax,%eax
   0xffffff8000010fb2 <+74>:	setne  %al
   0xffffff8000010fb5 <+77>:	test   %al,%al
   0xffffff8000010fb7 <+79>:	je     0xffffff8000010fd2 <MouseDriver::HandleInterrupt(int_frame)+106>
   0xffffff8000010fb9 <+81>:	mov    $0x60,%edi
   0xffffff8000010fbe <+86>:	mov    %rbx,%r15
   0xffffff8000010fc1 <+89>:	movabs $0xfffffffffffdf6d5,%rax
   0xffffff8000010fcb <+99>:	add    %rbx,%rax
   0xffffff8000010fce <+102>:	callq  *%rax
   0xffffff8000010fd0 <+104>:	jmp    0xffffff8000010f93 <MouseDriver::HandleInterrupt(int_frame)+43>
   0xffffff8000010fd2 <+106>:	mov    $0x20,%esi
   0xffffff8000010fd7 <+111>:	mov    $0x20,%edi
   0xffffff8000010fdc <+116>:	mov    %rbx,%r15
   0xffffff8000010fdf <+119>:	movabs $0xfffffffffffdf70f,%rax
   0xffffff8000010fe9 <+129>:	add    %rbx,%rax
   0xffffff8000010fec <+132>:	callq  *%rax
   0xffffff8000010fee <+134>:	mov    $0x20,%esi
   0xffffff8000010ff3 <+139>:	mov    $0xa0,%edi
   0xffffff8000010ff8 <+144>:	mov    %rbx,%r15
   0xffffff8000010ffb <+147>:	movabs $0xfffffffffffdf70f,%rax
   0xffffff8000011005 <+157>:	add    %rbx,%rax
   0xffffff8000011008 <+160>:	callq  *%rax
   0xffffff800001100a <+162>:	add    $0x20,%rsp
   0xffffff800001100e <+166>:	pop    %rbx
   0xffffff800001100f <+167>:	pop    %r15
   0xffffff8000011011 <+169>:	pop    %rbp
   0xffffff8000011012 <+170>:	retq   
End of assembler dump.
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Program received signal SIGINT, Interrupt.
0xffffff8000011603 in UI::Graphics::DrawBox (x=0, y=0, sizeX=1600, sizeY=882, innerColor=..., outlineSize=0, outlineColor=...) at src/interface/graphics/interface_graphics.cpp:81
81	                for(int j = startX; j < endX; j++){
Dump of assembler code for function MouseDriver::HandleInterrupt(int_frame):
   0xffffff8000010f68 <+0>:	endbr64 
   0xffffff8000010f6c <+4>:	push   %rbp
   0xffffff8000010f6d <+5>:	mov    %rsp,%rbp
   0xffffff8000010f70 <+8>:	push   %r15
   0xffffff8000010f72 <+10>:	push   %rbx
   0xffffff8000010f73 <+11>:	sub    $0x10,%rsp
   0xffffff8000010f77 <+15>:	endbr64 
   0xffffff8000010f7b <+19>:	lea    -0xb(%rip),%rbx        # 0xffffff8000010f77 <MouseDriver::HandleInterrupt(int_frame)+15>
   0xffffff8000010f82 <+26>:	movabs $0x24cd1,%r11
   0xffffff8000010f8c <+36>:	add    %r11,%rbx
   0xffffff8000010f8f <+39>:	mov    %rdi,-0x18(%rbp)
   0xffffff8000010f93 <+43>:	mov    $0x64,%edi
   0xffffff8000010f98 <+48>:	mov    %rbx,%r15
   0xffffff8000010f9b <+51>:	movabs $0xfffffffffffdf6d5,%rax
   0xffffff8000010fa5 <+61>:	add    %rbx,%rax
   0xffffff8000010fa8 <+64>:	callq  *%rax
   0xffffff8000010faa <+66>:	movzbl %al,%eax
   0xffffff8000010fad <+69>:	and    $0x1,%eax
   0xffffff8000010fb0 <+72>:	test   %eax,%eax
   0xffffff8000010fb2 <+74>:	setne  %al
   0xffffff8000010fb5 <+77>:	test   %al,%al
   0xffffff8000010fb7 <+79>:	je     0xffffff8000010fd2 <MouseDriver::HandleInterrupt(int_frame)+106>
   0xffffff8000010fb9 <+81>:	mov    $0x60,%edi
   0xffffff8000010fbe <+86>:	mov    %rbx,%r15
   0xffffff8000010fc1 <+89>:	movabs $0xfffffffffffdf6d5,%rax
   0xffffff8000010fcb <+99>:	add    %rbx,%rax
   0xffffff8000010fce <+102>:	callq  *%rax
   0xffffff8000010fd0 <+104>:	jmp    0xffffff8000010f93 <MouseDriver::HandleInterrupt(int_frame)+43>
   0xffffff8000010fd2 <+106>:	mov    $0x20,%esi
   0xffffff8000010fd7 <+111>:	mov    $0x20,%edi
   0xffffff8000010fdc <+116>:	mov    %rbx,%r15
   0xffffff8000010fdf <+119>:	movabs $0xfffffffffffdf70f,%rax
   0xffffff8000010fe9 <+129>:	add    %rbx,%rax
   0xffffff8000010fec <+132>:	callq  *%rax
   0xffffff8000010fee <+134>:	mov    $0x20,%esi
   0xffffff8000010ff3 <+139>:	mov    $0xa0,%edi
   0xffffff8000010ff8 <+144>:	mov    %rbx,%r15
   0xffffff8000010ffb <+147>:	movabs $0xfffffffffffdf70f,%rax
   0xffffff8000011005 <+157>:	add    %rbx,%rax
   0xffffff8000011008 <+160>:	callq  *%rax
   0xffffff800001100a <+162>:	nop
   0xffffff800001100b <+163>:	add    $0x10,%rsp
   0xffffff800001100f <+167>:	pop    %rbx
   0xffffff8000011010 <+168>:	pop    %r15
   0xffffff8000011012 <+170>:	pop    %rbp
   0xffffff8000011013 <+171>:	retq   
End of assembler dump.
Quit
Detaching from program: , process 1
Remote communication error.  Target disconnected.: Broken pipe.

Program received signal SIGINT, Interrupt.
UI::Graphics::DrawString (s=0xffffff800002f774 "test", len=4, column=0, row=0, textColor=..., bgColor=..., debug=false) at src/interface/graphics/interface_graphics.cpp:116
116	                        if(glyph[x/8] & (0b10000000 >> (x & 0b111))){
No symbol "ffffff8000011fa8" in current context.
Dump of assembler code for function UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum):
   0xffffff8000011e74 <+0>:	endbr64 
   0xffffff8000011e78 <+4>:	push   %rbp
   0xffffff8000011e79 <+5>:	mov    %rsp,%rbp
   0xffffff8000011e7c <+8>:	endbr64 
   0xffffff8000011e80 <+12>:	lea    -0xb(%rip),%rax        # 0xffffff8000011e7c <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+8>
   0xffffff8000011e87 <+19>:	movabs $0x23dcc,%r11
   0xffffff8000011e91 <+29>:	add    %r11,%rax
   0xffffff8000011e94 <+32>:	mov    %rdi,-0x8(%rbp)
   0xffffff8000011e98 <+36>:	mov    %esi,%eax
   0xffffff8000011e9a <+38>:	mov    %ax,-0xc(%rbp)
   0xffffff8000011e9e <+42>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ea2 <+46>:	movb   $0x0,(%rax)
   0xffffff8000011ea5 <+49>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ea9 <+53>:	movb   $0x0,0x1(%rax)
   0xffffff8000011ead <+57>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb1 <+61>:	movb   $0x0,0x2(%rax)
   0xffffff8000011eb5 <+65>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eb9 <+69>:	movb   $0xff,0x3(%rax)
   0xffffff8000011ebd <+73>:	movzwl -0xc(%rbp),%eax
   0xffffff8000011ec1 <+77>:	cmp    $0xd,%eax
   0xffffff8000011ec4 <+80>:	ja     0xffffff8000011fc5 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+337>
   0xffffff8000011eca <+86>:	mov    %eax,%eax
   0xffffff8000011ecc <+88>:	lea    0x0(,%rax,8),%rdx
   0xffffff8000011ed4 <+96>:	lea    0x1d3fd(%rip),%rax        # 0xffffff800002f2d8
   0xffffff8000011edb <+103>:	mov    (%rdx,%rax,1),%rax
   0xffffff8000011edf <+107>:	lea    0x1d3f2(%rip),%rdx        # 0xffffff800002f2d8
   0xffffff8000011ee6 <+114>:	add    %rdx,%rax
   0xffffff8000011ee9 <+117>:	notrack jmpq *%rax
   0xffffff8000011eec <+120>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef0 <+124>:	movb   $0x0,(%rax)
   0xffffff8000011ef3 <+127>:	mov    -0x8(%rbp),%rax
   0xffffff8000011ef7 <+131>:	movb   $0x0,0x1(%rax)
   0xffffff8000011efb <+135>:	mov    -0x8(%rbp),%rax
   0xffffff8000011eff <+139>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f03 <+143>:	jmpq   0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f08 <+148>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f0c <+152>:	movb   $0x0,(%rax)
   0xffffff8000011f0f <+155>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f13 <+159>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f17 <+163>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f1b <+167>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f1f <+171>:	jmpq   0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f24 <+176>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f28 <+180>:	movb   $0x0,(%rax)
   0xffffff8000011f2b <+183>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f2f <+187>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f33 <+191>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f37 <+195>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f3b <+199>:	jmpq   0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f40 <+204>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f44 <+208>:	movb   $0x0,(%rax)
   0xffffff8000011f47 <+211>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f4b <+215>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f4f <+219>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f53 <+223>:	movb   $0xff,0x2(%rax)
   0xffffff8000011f57 <+227>:	jmp    0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f59 <+229>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f5d <+233>:	movb   $0xff,(%rax)
   0xffffff8000011f60 <+236>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f64 <+240>:	movb   $0x0,0x1(%rax)
   0xffffff8000011f68 <+244>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f6c <+248>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f70 <+252>:	jmp    0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f72 <+254>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f76 <+258>:	movb   $0xff,(%rax)
   0xffffff8000011f79 <+261>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f7d <+265>:	movb   $0xb4,0x1(%rax)
   0xffffff8000011f81 <+269>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f85 <+273>:	movb   $0x0,0x2(%rax)
   0xffffff8000011f89 <+277>:	jmp    0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011f8b <+279>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f8f <+283>:	movb   $0xff,(%rax)
   0xffffff8000011f92 <+286>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f96 <+290>:	movb   $0xff,0x1(%rax)
   0xffffff8000011f9a <+294>:	mov    -0x8(%rbp),%rax
   0xffffff8000011f9e <+298>:	movb   $0xff,0x2(%rax)
   0xffffff8000011fa2 <+302>:	jmp    0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fa4 <+304>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fa8 <+308>:	movb   $0x0,(%rax)
   0xffffff8000011fab <+311>:	mov    -0x8(%rbp),%rax
   0xffffff8000011faf <+315>:	movb   $0x0,0x1(%rax)
   0xffffff8000011fb3 <+319>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fb7 <+323>:	movb   $0x0,0x2(%rax)
   0xffffff8000011fbb <+327>:	mov    -0x8(%rbp),%rax
   0xffffff8000011fbf <+331>:	movb   $0x0,0x3(%rax)
   0xffffff8000011fc3 <+335>:	jmp    0xffffff8000011fc6 <UI::Graphics::Color::Color(UI::Graphics::Color::ColorEnum)+338>
   0xffffff8000011fc5 <+337>:	nop
   0xffffff8000011fc6 <+338>:	nop
   0xffffff8000011fc7 <+339>:	pop    %rbp
   0xffffff8000011fc8 <+340>:	retq   
End of assembler dump.
